// Run: %dxc -T vs_6_0 -E VSmain

struct PSInput {
  float4 position : POSITION;
  float4 color : COLOR;
};

PSInput VSmain(float4 position: POSITION, float4 color: COLOR) {
  PSInput result;
  result.position = position;
  result.color = color;
  return result;
}


// CHECK-WHOLE-SPIR-V:
// ; SPIR-V
// ; Version: 1.0
// ; Generator: Google spiregg; 0
// ; Bound: 28
// ; Schema: 0
// OpCapability Shader
// OpMemoryModel Logical GLSL450
// OpEntryPoint Vertex %VSmain "VSmain" %gl_Position %7 %8 %5
// OpName %VSmain "VSmain"
// OpDecorate %gl_Position BuiltIn Position
// OpDecorate %7 Location 0
// OpDecorate %8 Location 1
// OpDecorate %5 Location 0
// %int = OpTypeInt 32 1
// %float = OpTypeFloat 32
// %v4float = OpTypeVector %float 4
// %_ptr_Output_v4float = OpTypePointer Output %v4float
// %_ptr_Input_v4float = OpTypePointer Input %v4float
// %void = OpTypeVoid
// %10 = OpTypeFunction %void
// %_struct_13 = OpTypeStruct %v4float %v4float
// %_ptr_Function__struct_13 = OpTypePointer Function %_struct_13
// %_ptr_Function_v4float = OpTypePointer Function %v4float
// %int_0 = OpConstant %int 0
// %int_1 = OpConstant %int 1
// %gl_Position = OpVariable %_ptr_Output_v4float Output
// %5 = OpVariable %_ptr_Output_v4float Output
// %7 = OpVariable %_ptr_Input_v4float Input
// %8 = OpVariable %_ptr_Input_v4float Input
// %VSmain = OpFunction %void None %10
// %12 = OpLabel
// %15 = OpVariable %_ptr_Function__struct_13 Function
// %19 = OpAccessChain %_ptr_Function_v4float %15 %int_0
// %20 = OpLoad %v4float %7
// OpStore %19 %20
// %22 = OpAccessChain %_ptr_Function_v4float %15 %int_1
// %23 = OpLoad %v4float %8
// OpStore %22 %23
// %24 = OpAccessChain %_ptr_Function_v4float %15 %int_0
// %25 = OpLoad %v4float %24
// OpStore %gl_Position %25
// %26 = OpAccessChain %_ptr_Function_v4float %15 %int_1
// %27 = OpLoad %v4float %26
// OpStore %5 %27
// OpReturn
// OpFunctionEnd